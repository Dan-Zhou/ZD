package jxr;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

public class gameApp extends JFrame {

	/**
	 * gameApp 
	 */
	private static final long serialVersionUID = -3769641318790679140L;
	private board a;

	public gameApp() {
		uiPanel panel = new uiPanel();
		this.setLayout(new BorderLayout());
		this.getContentPane().add(panel, BorderLayout.CENTER);
		JPanel cotrolJPanel = new JPanel();
		cotrolJPanel.setLayout(new BorderLayout());
		JLabel startBt = new JLabel(" score :");
		previewPanel boardPanel = globalManager.getPreviewPanel();
		boardPanel.setPreferredSize(new Dimension(50, 50));
		JLabel score = globalManager.getScore();
		cotrolJPanel.add(startBt, BorderLayout.NORTH);
		cotrolJPanel.add(boardPanel, BorderLayout.SOUTH); 
		cotrolJPanel.add(score, BorderLayout.CENTER);
		cotrolJPanel.setPreferredSize(new Dimension(80, -1));
		this.getContentPane().add(cotrolJPanel, BorderLayout.WEST);
		this.setDefaultCloseOperation(EXIT_ON_CLOSE);
		this.setTitle("俄罗斯方块");
		a = new board();

		a.start();
		this.addKeyListener(new KeyAdapter() {

			@Override
			public void keyPressed(KeyEvent e) {

				if (a == null)
					return;
				switch (e.getKeyCode()) {
				case KeyEvent.VK_ENTER: {
					a = new board();
					a.start();
					break;
				}
				case KeyEvent.VK_UP:
					dataManager.reTransformation();
					int[][] curData = dataManager.getCurBlock();
					a.setBlockData(curData);
					a.init(false);
					break;
				case KeyEvent.VK_LEFT:
					a.moveLeft();
					break;
				case KeyEvent.VK_RIGHT:
					a.moveRight();
					break;
				case KeyEvent.VK_DOWN:
					a.moveDown();
					break;
				default:
					a.moveDown();
					break;
				}
			}
		});
		this.pack();
	}

	protected void makecenter() {
		Dimension size = Toolkit.getDefaultToolkit().getScreenSize();
		int x = (int) (size.getWidth() / 2 - this.getWidth() / 2);
		int y = (int) (size.getHeight() / 2 - this.getHeight() / 2);
		this.setLocation(x, y);
	}

	/**
	 * @param args
	 */
	public static void main(String[] args) {

		gameApp app = new gameApp();

		app.makecenter();
		app.setVisible(true);
		app.setFocusable(true);

	}
}
